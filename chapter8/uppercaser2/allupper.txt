;  EXECUTABLE NAME : UPPERCASER2
;  VERSION         : 1.0
;  CREATED DATE    : 3/25/2009
;  LAST UPDATE     : 3/25/2009
;  AUTHOR          : JEFF DUNTEMANN
;  DESCRIPTION     : A SIMPLE PROGRAM IN ASSEMBLY FOR LINUX, USING NASM 2.05,
;    DEMONSTRATING SIMPLE TEXT FILE I/O (THROUGH REDIRECTION) FOR READING AN
;    INPUT FILE TO A BUFFER IN BLOCKS, FORCING LOWERCASE CHARACTERS TO 
;    UPPERCASE, AND WRITING THE MODIFIED BUFFER TO AN OUTPUT FILE.
;
;  RUN IT THIS WAY:
;    UPPERCASER2 > (OUTPUT FILE) < (INPUT FILE)  
;
;  BUILD USING THESE COMMANDS:
;    NASM -F ELF -G -F STABS UPPERCASER2.ASM
;    LD -O UPPERCASER2 UPPERCASER2.O
;
SECTION .BSS			; SECTION CONTAINING UNINITIALIZED DATA

	BUFFLEN	EQU 1024	; LENGTH OF BUFFER
	BUFF: 	RESB BUFFLEN	; TEXT BUFFER ITSELF
	
SECTION .DATA			; SECTION CONTAINING INITIALISED DATA

SECTION .TEXT			; SECTION CONTAINING CODE

GLOBAL 	_START			; LINKER NEEDS THIS TO FIND THE ENTRY POINT!
	
_START:
	NOP			; THIS NO-OP KEEPS GDB HAPPY...

; READ A BUFFER FULL OF TEXT FROM STDIN:
READ:

	MOV RAX,0		; SPECIFY SYS_READ CALL
	MOV RDI,0		; SPECIFY FILE DESCRIPTOR 0: STANDARD INPUT
	MOV RSI,BUFF		; PASS OFFSET OF THE BUFFER TO READ TO
	MOV RDX,BUFFLEN		; PASS NUMBER OF BYTES TO READ AT ONE PASS
	SYSCALL			; CALL SYS_READ TO FILL THE BUFFER

	
	MOV RBX,RAX		; COPY SYS_READ RETURN VALUE FOR SAFEKEEPING
	CMP RAX,0		; IF EAX=0, SYS_READ REACHED EOF ON STDIN
	JE DONE			; JUMP IF EQUAL (TO 0, FROM COMPARE)

; SET UP THE REGISTERS FOR THE PROCESS BUFFER STEP:
     
	MOV RCX,RBX		; PLACE THE NUMBER OF BYTES READ INTO ECX
	MOV RBP,BUFF		; PLACE ADDRESS OF BUFFER INTO EBP
	DEC RBP			; ADJUST COUNT TO OFFSET

; GO THROUGH THE BUFFER AND CONVERT LOWERCASE TO UPPERCASE CHARACTERS:
SCAN:
	CMP BYTE [RBP+RCX],61H	; TEST INPUT CHAR AGAINST LOWERCASE 'A'
	JB NEXT			; IF BELOW 'A' IN ASCII, NOT LOWERCASE
	CMP BYTE [RBP+RCX],7AH	; TEST INPUT CHAR AGAINST LOWERCASE 'Z'
	JA NEXT			; IF ABOVE 'Z' IN ASCII, NOT LOWERCASE
				; AT THIS POINT, WE HAVE A LOWERCASE CHAR
	SUB BYTE [RBP+RCX],20H	; SUBTRACT 20H TO GIVE UPPERCASE...
NEXT:	DEC RCX			; DECREMENT COUNTER
	JNZ SCAN		; IF CHARACTERS REMAIN, LOOP BACK

; WRITE THE BUFFER FULL OF PROCESSED TEXT TO STDOUT:
WRITE:
	MOV RAX,1		; SPECIFY SYS_WRITE CALL
	MOV RDI,1		; SPECIFY FILE DESCRIPTOR 1: STANDARD OUTPUT
	MOV RSI,BUFF		; PASS OFFSET OF THE BUFFER
	MOV RDX,RBX		; PASS THE # OF BYTES OF DATA IN THE BUFFER
	SYSCALL			; MAKE KERNEL CALL

	JMP READ		; LOOP BACK AND LOAD ANOTHER BUFFER FULL

; ALL DONE! LET'S END THIS PARTY:
DONE:
	MOV RAX,60		; CODE FOR EXIT SYSCALL
	MOV RDI,0		; RETURN A CODE OF ZERO	
	SYSCALL			; MAKE KERNEL CALL
